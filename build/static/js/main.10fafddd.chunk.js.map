{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","services/phonebook.js","App.js","index.js"],"names":["PersonForm","newName","newNumber","handleNameChange","handleSubmit","handleNumberChange","onSubmit","onChange","value","type","Filter","filterResults","setFilter","event","target","Persons","persons","handleNumberDelete","filter","person","name","toLowerCase","includes","map","key","id","number","onClick","e","local","newPerson","axios","post","then","response","data","get","delete","put","App","useState","addPersons","setNewName","setNewNumber","useEffect","personService","preventDefault","personIndex","findIndex","p","toUpperCase","nextPerson","concat","catch","reason","alert","window","confirm","find","peeps","undefined","after","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10fafddd.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ newName,\n                      newNumber,\n                      handleNameChange,\n                      handleSubmit,\n                      handleNumberChange }) => {\n  \n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                name: <input onChange={handleNameChange} value={newName} ></input>\n            </div>\n            <div>\n                number: <input onChange={handleNumberChange} value={newNumber}></input>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Filter = ({filterResults, setFilter}) => {\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    return (\n        <div>\n            filter shown with \n            <input onChange={handleFilterChange} value={filterResults} />\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react';\n\nconst Persons = ({filterResults, persons, handleNumberDelete}) => {\n    \n    return (\n    <ul>\n        {persons.filter(\n        person => person.name.toLowerCase().includes(filterResults.toLowerCase()))\n        .map(person => { \n            return (<li key={person.id}> {person.name} {person.number} \n        <button onClick={(e) => handleNumberDelete(person.id)}>delete</button></li>) })}\n    </ul>)\n\n}\n\nexport default Persons;","import axios from 'axios' \n\nconst local = \"/api/persons\"\n\nconst addPerson = (newPerson) => {\n    const response = axios.post(local, newPerson)\n    return response.then(response => response.data)\n}\n\nconst getAll = () => {\n    const response = axios.get(local)\n    return response.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const response = axios.delete(`${local}/${id}`)\n    return response.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${local}/${id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default { addPerson, getAll, deletePerson, update }","import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport personService from './services/phonebook.js'\n\nconst App = () => {\n  const [persons, addPersons] = useState([])\n  const [filterResults, setFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  } \n\n  const handleNumberDelete = (id) => {\n    const person = persons.find(peeps => peeps.id === id)\n    if (person === undefined) {\n      console.log(\"not available locally!\")\n      return;\n    }\n\n    if (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n    personService.deletePerson(id).then(after => {\n      addPersons(persons.filter(person => person.id !== id))\n      setNewName(\"\")\n      setNewNumber(\"\")\n    }).catch((error) => {\n      alert(`${person.name} is already deleted, or doesn't exist`)\n      addPersons(persons.filter(person => person.id !== id))\n    })\n  }\n}\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const personIndex = persons.findIndex(p => p.name.toUpperCase() === newName.toUpperCase()) \n    const nextPerson = {\n      name: newName,\n      number: newNumber\n  }\n    if (personIndex === -1) {\n     \n\n        personService.addPerson(nextPerson)\n            .then(newPerson => {\n                addPersons(persons.concat(newPerson));\n                setNewName(\"\");\n                setNewNumber(\"\");\n        }).catch(reason => {\n          alert(reason)\n        })\n    }\n    else {\n      const {name, id} = persons[personIndex];\n      if (window.confirm(`${name} is already in the phonebook, replace the old number with a new one?`)) {\n        personService.update(id, nextPerson).then(newPerson => \n          addPersons(persons.map(person => person.id !== id ? person : newPerson))\n        )\n      }\n    }\n  }\n\n\n  useEffect(() => { personService.getAll().then(persons => addPersons(persons)) } \n           ,[]);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      { /* filter */ }\n      <Filter filterResults={filterResults} setFilter={setFilter} />\n      <h2>add a new</h2>\n      <PersonForm newName={newName}\n                  newNumber={newNumber} \n                  setNewNumber={setNewNumber}\n                  handleNameChange={handleNameChange}\n                  handleSubmit={handleSubmit}\n                  handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      {/* persons */ }\n      <Persons filterResults={filterResults} persons={persons} handleNumberDelete={handleNumberDelete} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}